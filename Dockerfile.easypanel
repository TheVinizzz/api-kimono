# Dockerfile otimizado para EasyPanel
FROM node:18-alpine

# Definir variáveis de ambiente para o build
ENV NODE_ENV=production
ENV PORT=4000

# Criar diretório de trabalho
WORKDIR /app

# Instalar dependências do sistema necessárias
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    && rm -rf /var/cache/apk/*

# Copiar arquivos de dependências primeiro (para melhor cache)
COPY package*.json ./
COPY tsconfig.json ./

# Instalar dependências de produção
RUN npm ci --only=production --no-audit --no-fund \
    && npm cache clean --force

# Copiar código fonte
COPY src/ ./src/
COPY prisma/ ./prisma/

# Gerar Prisma client
RUN npx prisma generate

# Compilar TypeScript
RUN npm run build

# Remover dependências de desenvolvimento e arquivos desnecessários
RUN rm -rf node_modules \
    && npm ci --only=production --no-audit --no-fund \
    && npm cache clean --force \
    && rm -rf /tmp/* /var/cache/apk/*

# Criar usuário não-root para segurança
RUN addgroup -g 1001 -S nodejs \
    && adduser -S nodejs -u 1001

# Mudar ownership dos arquivos
RUN chown -R nodejs:nodejs /app
USER nodejs

# Expor porta
EXPOSE 4000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node dist/health-check.js || exit 1

# Comando para iniciar a aplicação
CMD ["node", "dist/index.js"]
